Название задания: cpp01_02
Ожидаемые файлы: Warlock.cpp Warlock.hpp
                   ASpell.hpp ASpell.cpp
				   ATarget.hpp ATarget.cpp
				   Fwoosh.hpp Fwoosh.cpp
				   Dummy.hpp Dummy.cpp
-------------------------------------------------- ------------------------------

В классе Warlock оператор switch ЗАПРЕЩЕН, и его использование
результат -42.

Создайте абстрактный класс с именем ASpell в форме Коплина, который имеет
следующие защищенные атрибуты:

* имя (строка)
* эффекты (строка)

У обоих будут геттеры (getName и getEffects), которые возвращают строки.

Также добавьте чистый метод клонирования, который возвращает указатель на ASpell.

Все эти функции можно вызывать для константного объекта.

У ASpell есть конструктор, который берет свое имя и свои эффекты в указанном порядке.

Теперь вы создадите абстрактный класс ATarget в форме Коплиена. Он имеет тип
атрибут, который является строкой, и связанный с ним геттер, getType, который возвращает
ссылка на константную строку.

Во многом так же, как и в ASpell, у него есть чистый метод clone().

Все эти функции можно вызывать для константного объекта.

У него есть конструктор, который принимает его тип.

Теперь добавьте в ATarget функцию getHitBySpell, которая получает ссылку на
постоянный ASpell.

Он будет отображать:

<ТИП> был <ЭФФЕКТЫ>!

<TYPE> — тип ATarget, а <EFFECTS> — возвращаемое значение ASpell.
Функция getEffects.

Наконец, добавьте в свой класс ASpell функцию запуска, которая принимает ссылку на
постоянный ATarget.

Этот просто вызовет getHitBySpell переданного объекта, передав
текущий экземпляр в качестве параметра.

Когда все это будет сделано, создайте реализацию ASpell с именем Fwoosh. Его
конструктор по умолчанию установит имя «Fwoosh» и эффекты для
"поболтал". Вы, конечно, реализуете метод clone(). На случай, если
Fwoosh, он вернет указатель на новый объект Fwoosh.

Таким же образом создайте конкретный объект ATarget с именем Dummy, тип которого
это «Манекен для стрельбы по мишеням». Вы также должны реализовать его метод clone().

Добавьте в Warlock следующие функции-члены:

*learnSpell, берет указатель на ASpell, что заставляет Чернокнижника выучить заклинание
* забудьтеСпелл, берет строку, соответствующую имени заклинания, и делает
  Варлок, забудь. Если это не известное заклинание, ничего не делает.
* launchSpell, принимает строку (имя заклинания) и ссылку на ATarget,
  запускает заклинание на выбранную цель. Если это не известное заклинание,
  ничего.

Вам понадобится новый атрибут для хранения заклинаний, которые знает ваш Чернокнижник. Несколько
типы соответствуют всем требованиям, вам решать, чтобы выбрать лучший.

Ниже приведен возможный основной тест и его ожидаемый результат:

основной ()
{
  Чернокнижник Ричард("Ричард", "Титулованный");

  манекен боб;
  Fwoosh* fwoosh = новый Fwoosh();

  Richard.learnSpell(fwoosh);

  Ричард.Ввести();
  richard.launchSpell("Фвуш", боб);

  Richard.forgetSpell("Fwoosh");
  richard.launchSpell("Фвуш", боб);
}

~$ ./a.out | кошка -е
Ричард: Похоже, это еще один скучный день.$
Ричард: Я Ричард, Титулованный!$
Учебный манекен для мишеней был обласкан!$
Ричард: Моя работа выполнена!$